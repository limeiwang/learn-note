(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{379:function(t,_,v){"use strict";v.r(_);var e=v(42),a=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"关于http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关于http"}},[t._v("#")]),t._v(" 关于Http")]),t._v(" "),v("h3",{attrs:{id:"什么是http-超文本传输协议-它是一个应用层协议。"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是http-超文本传输协议-它是一个应用层协议。"}},[t._v("#")]),t._v(" 什么是http？"),v("strong",[t._v("超文本传输协议")]),t._v("，它是一个"),v("strong",[t._v("应用层")]),t._v("协议。")]),t._v(" "),v("p",[t._v("HTTP（HyperText Transfer Protocol）协议是基于TCP的应用层协议，它不关心数据传输的细节，主要是用来规定客户端和服务端的数据传输格式，最初是用来向客户端传输HTML页面的内容。默认端口是80。")]),t._v(" "),v("h3",{attrs:{id:"http简史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http简史"}},[t._v("#")]),t._v(" HTTP简史")]),t._v(" "),v("h4",{attrs:{id:"http-0-9版本-1991年"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9版本-1991年"}},[t._v("#")]),t._v(" HTTP 0.9版本  1991年")]),t._v(" "),v("p",[t._v("这个版本就是最初用来向客户端传输HTML页面的，所以只有一个GET命令，然后服务器返回客户端一个HTML页面，不能是其他格式。\n利用这个版本完全可以构建一个简单的静态网站了。")]),t._v(" "),v("h4",{attrs:{id:"http-1-0版本-1996年"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0版本-1996年"}},[t._v("#")]),t._v(" HTTP 1.0版本  1996年")]),t._v(" "),v("p",[t._v("1.0版本是改变计较大的，尊订了现在HTTP协议的基础，这个版本的协议不仅可以传输HTML的文本页面，还可以传输其他二进制文件，例如：图片、视频。而且还增加了现在常用的POST和HEAD命令。请求消息和响应消息也不是单一的了，规定了一些元数据字段。例如：字符集、编码。状态响应码等。")]),t._v(" "),v("h4",{attrs:{id:"http-1-1版本-1997年"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1版本-1997年"}},[t._v("#")]),t._v(" HTTP 1.1版本 1997年")]),t._v(" "),v("p",[t._v("在1.0版本发布之后半年的时间又发布了一个版本，这个版本在1.0版本的基础上更加完善了。这个版本增加了持久连接，就是之前版本的协议一次请求就是一次TCP链接，请求完成后这个链接就关闭掉了。众所周知TCP协议是可靠的，建立连接需要3次握手，断开链接需要4次挥手，并且TCP有流量控制和阻塞控制，有慢开始机制，刚建立链接时传输比较慢，这是比较耗费资源的。一个丰富的页面会有许多图片、表单和超链接。这样的话就会有多次的HTTP请求，所以在这个版本上默认不关闭TCP连接也不声明Connection：keep-alive字段，如果确实要关闭可以指定Connection：close字段。还引入了管道机制，就是说在一个TCP链接里可以同时发送多个HTTP请求，而不必等待上一个请求响应成功再发送。还增加了PUT、PATCH、HEAD、OPTION、DELETE等命令。丰富了客户端和服务端交互动作。还增加了Host字段。")]),t._v(" "),v("h4",{attrs:{id:"http-2-0版本-2015年"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0版本-2015年"}},[t._v("#")]),t._v(" HTTP 2.0版本  2015年")]),t._v(" "),v("p",[t._v("这个版本也是随着互联网的发展，有了新的需求定制了新的功能还有对上一个版本的完善。1.1版本有了管道机制，但是在服务端还是要对请求进行排队处理。这个版本可以多工的处理。还有了头信心压缩和服务器的主动推送。")]),t._v(" "),v("h3",{attrs:{id:"http特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http特点"}},[t._v("#")]),t._v(" http特点：")]),t._v(" "),v("ul",[v("li",[t._v("无状态的协议，无状态就是客户端的每次请求都没有关系，它们是独立的。")]),t._v(" "),v("li",[t._v("只能是客户端发起请求，服务器响应。服务器不能主动向客户端传递消息。")]),t._v(" "),v("li",[t._v("底层是基于TCP实现的。")])]),t._v(" "),v("h3",{attrs:{id:"http报文分为请求报文和响应报文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http报文分为请求报文和响应报文"}},[t._v("#")]),t._v(" http报文分为请求报文和响应报文")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("请求报文：它会向Web服务器请求一个动作。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("请求报文由请求行（request line）、请求头部（header）、空行和请求数据4个部分组成")])]),t._v(" "),v("li",[v("p",[t._v("请求头")]),t._v(" "),v("p",[t._v("Accept:")]),t._v(" "),v("p",[t._v("Accept-Encoding: gzip, deflate, br")]),t._v(" "),v("p",[t._v("Accept-Language: zh-CN,zh;q=0.9")]),t._v(" "),v("p",[t._v("Cache-Control: max-age=0")]),t._v(" "),v("p",[t._v("Connection: keep-alive")]),t._v(" "),v("p",[t._v("Host: localhost:8080")]),t._v(" "),v("p",[t._v("Referer: http://localhost:8080/browser/http.html")]),t._v(" "),v("p",[t._v("Sec-Fetch-Dest: document")]),t._v(" "),v("p",[t._v("Sec-Fetch-Mode: navigate")]),t._v(" "),v("p",[t._v("Sec-Fetch-Site: same-origin")])])])]),t._v(" "),v("li",[v("p",[t._v("响应报文：它会将请求的结果返回给客户端。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("响应报文由三个部分组成，分别是：状态行、消息报头、响应正文。")])]),t._v(" "),v("li",[v("p",[t._v("响应头")]),t._v(" "),v("p",[t._v("Accept-Ranges: bytes")]),t._v(" "),v("p",[t._v("access-control-allow-origin: *")]),t._v(" "),v("p",[t._v("Content-Length: 287")]),t._v(" "),v("p",[t._v("Content-Type: text/html; charset=UTF-8")]),t._v(" "),v("p",[t._v("Date: Thu, 19 Nov 2020 15:57:34 GMT")]),t._v(" "),v("p",[t._v('ETag: W/"11f-Zn+0AjH/vxli4WLj1EMYz+sNabc"')]),t._v(" "),v("p",[t._v("Vary: Accept-Encoding")]),t._v(" "),v("p",[t._v("X-Powered-By: Express")])])])])]),t._v(" "),v("h3",{attrs:{id:"前端要重点知道的知识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端要重点知道的知识"}},[t._v("#")]),t._v(" 前端要重点知道的知识")]),t._v(" "),v("h4",{attrs:{id:"_1-url-统一资源标识符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-url-统一资源标识符"}},[t._v("#")]),t._v(" 1. URL（统一资源标识符）")]),t._v(" "),v("p",[t._v("一种特殊类型的URI，包含协议、域名、端口，可能包含虚拟目录、文件名、锚、参数。其中协议，域名，端口一部分不一样，就是跨域。")]),t._v(" "),v("h4",{attrs:{id:"_2-request-method-请求方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-request-method-请求方式"}},[t._v("#")]),t._v(" 2. Request Method（请求方式）：")]),t._v(" "),v("p",[t._v("GET，POST，HEAD，PUT，DELETE，CONNECT，OPTIONS，TRACE。常用就是GET,POST，注意它们的区别。")]),t._v(" "),v("h4",{attrs:{id:"_3-状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-状态码"}},[t._v("#")]),t._v(" 3. 状态码：")]),t._v(" "),v("ul",[v("li",[t._v("1xx：指示信息--表示请求已接收，继续处理。")]),t._v(" "),v("li",[t._v("2xx：成功--表示请求已被成功接收、理解、接受。")]),t._v(" "),v("li",[t._v("3xx：重定向--要完成请求必须进行更进一步的操作。")]),t._v(" "),v("li",[t._v("4xx：客户端错误--请求有语法错误或请求无法实现。")]),t._v(" "),v("li",[t._v("5xx：服务器端错误--服务器未能实现合法的请求。")])]),t._v(" "),v("p",[v("strong",[t._v("常见状态码")])]),t._v(" "),v("ul",[v("li",[t._v("200 OK：客户端请求成功。")]),t._v(" "),v("li",[t._v("400 Bad Request：客户端请求有语法错误，不能被服务器所理解。")]),t._v(" "),v("li",[t._v("401 Unauthorized：请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用。")]),t._v(" "),v("li",[t._v("403 Forbidden：服务器收到请求，但是拒绝提供服务。")]),t._v(" "),v("li",[t._v("404 Not Found：请求资源不存在，举个例子：输入了错误的URL。")]),t._v(" "),v("li",[t._v("500 Internal Server Error：服务器发生不可预期的错误。")]),t._v(" "),v("li",[t._v("503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常，举个例子：HTTP/1.1 200 OK（CRLF）。")])]),t._v(" "),v("h4",{attrs:{id:"_4-cookie与session区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-cookie与session区别"}},[t._v("#")]),t._v(" 4. cookie与session区别：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("cookie将状态保存在客户端，session将状态保存在服务端。")])]),t._v(" "),v("li",[v("p",[t._v("session相对于cookie要安全，但cookie不需要占用服务器的资源。")])]),t._v(" "),v("li",[v("p",[t._v("单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。")])])]),t._v(" "),v("h3",{attrs:{id:"https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" https：")]),t._v(" "),v("p",[t._v("HTTPS是http协议的"),v("strong",[t._v("安全版本")]),t._v("，http协议的数据传输是"),v("strong",[t._v("明文")]),t._v("的，是不安全的，HTTPS使用了"),v("strong",[t._v("SSL/TLS")]),t._v("协议进行了"),v("strong",[t._v("加密处理")]),t._v("。")]),t._v(" "),v("p",[v("strong",[t._v("http与https的区别")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("HTTP 无法加密，而HTTPS 对传输的数据进行加密，更加安全。")])]),t._v(" "),v("li",[v("p",[t._v("HTTP 无需证书，而HTTPS 需要CA机构wosign的颁发的SSL证书。")])]),t._v(" "),v("li",[v("p",[t._v("HTTP 标准端口是80 ，而 HTTPS 的标准端口是443。")])]),t._v(" "),v("li",[v("p",[t._v("在OSI 网络模型中，HTTP工作于应用层，而HTTPS 的安全传输机制工作在传输层。")])])]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.jianshu.com/p/a1ebc61ce141",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP三次握手及四次挥手"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("a",{attrs:{href:"https://blog.csdn.net/sean_cd/article/details/6966130",target:"_blank",rel:"noopener noreferrer"}},[t._v("https工作原理"),v("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=a.exports}}]);