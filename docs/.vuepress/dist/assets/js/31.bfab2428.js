(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{380:function(t,e,a){"use strict";a.r(e);var n=a(42),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-基础"}},[t._v("#")]),t._v(" CSS 基础")]),t._v(" "),a("h3",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("p",[t._v("块状格式化上下文（block formatting context）简称 "),a("code",[t._v("BFC")]),t._v("：是页面上的一个隔离的独立容器,容器里面的子元素不会影响到外面的元素。")]),t._v(" "),a("p",[t._v("如何触发BFC？")]),t._v(" "),a("ol",[a("li",[t._v("根元素（"),a("code",[t._v("html")]),t._v("）: 最大的BFC")]),t._v(" "),a("li",[a("code",[t._v("position")]),t._v(" 设置为 "),a("code",[t._v("fixed")]),t._v(" 或者 "),a("code",[t._v("absolute")])]),t._v(" "),a("li",[t._v("display 设置为 "),a("code",[t._v("inline-block")]),t._v(" 、"),a("code",[t._v("table-block")]),t._v(" 、 "),a("code",[t._v("table-caption")])]),t._v(" "),a("li",[a("code",[t._v("overflow")]),t._v(" 的值不为 "),a("code",[t._v("visible")])]),t._v(" "),a("li",[a("code",[t._v("float")]),t._v(" 的值不为 "),a("code",[t._v("none")])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 格式化上下文"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("BFC的定位方案")]),t._v(" "),a("ol",[a("li",[t._v("内部的box会在 "),a("strong",[t._v("垂直方向上")]),t._v(" 一个接一个的摆放")]),t._v(" "),a("li",[t._v("属于同一个BFC中的两个相邻元素的 "),a("strong",[t._v("垂直方向上 margin")]),t._v(" 会重叠")]),t._v(" "),a("li",[t._v("BFC中每个元素的左边margin会与包含块的左边border相接触")]),t._v(" "),a("li",[t._v("计算BFC的高度时，浮动元素也会参与计算")])]),t._v(" "),a("h3",{attrs:{id:"选择器权重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器权重"}},[t._v("#")]),t._v(" 选择器权重")]),t._v(" "),a("p",[t._v("Css选择器优先级")]),t._v(" "),a("ol",[a("li",[t._v("!important -> 最高")]),t._v(" "),a("li",[t._v("内联style -> 1000")]),t._v(" "),a("li",[t._v("id -> 100")]),t._v(" "),a("li",[t._v("class -> 10")]),t._v(" "),a("li",[t._v("tag -> 1")]),t._v(" "),a("li",[t._v("继承样式")])]),t._v(" "),a("h3",{attrs:{id:"margin-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#margin-属性"}},[t._v("#")]),t._v(" margin 属性")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("margin")]),t._v(" 属性为给定元素设置所有四个（上下左右）方向的外边距属性。")]),t._v(" "),a("li",[t._v("普通元素的 百分比margin 都是相对于容器的"),a("code",[t._v("宽度")]),t._v("计算的")]),t._v(" "),a("li",[t._v("绝对定位元素的 百分比margin 相对于其定位祖先元素的宽度计算的")]),t._v(" "),a("li",[t._v("上下margin会重叠：只会发生在 "),a("code",[t._v("block")]),t._v(" 元素上，（取最大值）\n"),a("ol",[a("li",[t._v("解决重叠方法：")]),t._v(" "),a("li",[a("strong",[t._v("父元素")]),t._v("设置 "),a("code",[t._v("BFC")]),t._v("（如overflow：hidden；如position：absolute等）")]),t._v(" "),a("li",[a("strong",[t._v("父元素")]),t._v("设置 "),a("code",[t._v("border")]),t._v("/"),a("code",[t._v("padding")])])])]),t._v(" "),a("li",[t._v("当 margin 的值为 "),a("code",[t._v("auto")]),t._v(" 时。浏览器会自动选择一个合适的margin来应用（自动分配剩余空间）\n"),a("ol",[a("li",[t._v("需要元素是 块状元素")]),t._v(" "),a("li",[t._v("需要元素 设置宽度")])])]),t._v(" "),a("li",[t._v("margin 可以为 负值")])]),t._v(" "),a("h3",{attrs:{id:"水平居中-简单版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#水平居中-简单版"}},[t._v("#")]),t._v(" 水平居中 简单版")]),t._v(" "),a("ol",[a("li",[t._v("内联元素")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    text-align: center;\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("固定宽度的 块状元素")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // 设置 左右 margin 为 auto\n    margin: 0 auto;\n")])])]),a("h3",{attrs:{id:"垂直居中-简单版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#垂直居中-简单版"}},[t._v("#")]),t._v(" 垂直居中 简单版")]),t._v(" "),a("ol",[a("li",[t._v("单行文本 垂直居中 -> "),a("code",[t._v("line-height")])]),t._v(" "),a("li",[t._v("多行文本 垂直居中")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // vertical-align 只对行内元素、表格单元格元素生效\n    // 指定 行内元素/表格单元元素 基线相对于 块状元素基线的位置\n\n    .center-table {\n        display: table;\n    }\n    .center-table p {\n        display: table-cell;\n        vertical-align: middle;\n    }\n")])])]),a("h3",{attrs:{id:"元素居中-水平且垂直-进阶"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素居中-水平且垂直-进阶"}},[t._v("#")]),t._v(" 元素居中（水平且垂直） 进阶")]),t._v(" "),a("ol",[a("li",[t._v("固定宽高 居中")])]),t._v(" "),a("p",[t._v("通过 绝对定位 + 负margin")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    #main{\n        position: relative;\n        // ... 略\n    }\n    #center{\n        position: absolute;\n        width: 100px;\n        height: 100px;\n        left: 50%;\n        top: 50%;\n        margin: -50px;\n    }\n")])])]),a("p",[t._v("通过 绝对定位 + "),a("code",[t._v("margin: auto;")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    #main{\n        position: relative;\n        // ... 略\n    }\n    #center{\n        width: 100px;\n        height: 100px;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        margin: auto;\n        position: absolute;\n    }\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("不定宽高")])]),t._v(" "),a("p",[t._v("transform 居中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    #main{\n        position: relative;\n        // ... 略\n    }\n    #center{\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n    }\n")])])]),a("p",[t._v("flex 居中（一）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    #main{\n        display: flex; \n        justify-content: center; \n        align-items: center;\n    }\n")])])]),a("p",[t._v("flex 居中（二）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    #main{\n        display: flex;\n        // ... 略\n    }\n    #center{\n        margin: auto;\n    }\n")])])]),a("h3",{attrs:{id:"浏览器如何解析-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何解析-css"}},[t._v("#")]),t._v(" 浏览器如何解析 css")]),t._v(" "),a("ol",[a("li",[t._v("css 的解析是从上往下")]),t._v(" "),a("li",[t._v("渲染顺序也是从上往下")]),t._v(" "),a("li",[t._v("下载和渲染是同时进行的。")]),t._v(" "),a("li",[t._v("css的解析和js的解析是不能同时进行的")]),t._v(" "),a("li",[a("code",[t._v("css选择器")]),t._v(" 的解析是从右向左解析\n"),a("ol",[a("li",[t._v("（jQuery选择器解析方式同理）")]),t._v(" "),a("li",[t._v("能先确定元素位置，减少匹配次数")])])])]),t._v(" "),a("h3",{attrs:{id:"css属性支持判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css属性支持判断"}},[t._v("#")]),t._v(" CSS属性支持判断")]),t._v(" "),a("ol",[a("li",[t._v("利用属性覆盖原理")])]),t._v(" "),a("p",[t._v("将高版本浏览器支持的特性写在后面。利用浏览器的2个CSS解析特性：")]),t._v(" "),a("ul",[a("li",[t._v("后面的属性覆盖前面的属性")]),t._v(" "),a("li",[t._v("遇到不认识的语法，CSS parser 不解析。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    div {\n        background: red;\n        background: linear-gradient(90deg, red, yellow)\n    }\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用 "),a("code",[t._v(".css")]),t._v(" 的 "),a("code",[t._v("@supports")]),t._v(" 来判断属性支持情况")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // 支持特定属性的处理\n    @supports (position:sticky) {\n        div {\n            position:sticky;\n        }\n    }\n    \n    // 不支持特定属性：用not处理\n    @supports not (background: linear-gradient(90deg, red, yellow)) {\n        div {\n            background: red;\n        }\n    }\n\n    // 如果是多个css属性：用and处理\n    @supports (display:-webkit-box) and (-webkit-line-clamp:2) and (-webkit-box-orient:vertical) {\n        p {\n            display: -webkit-box;\n            -webkit-line-clamp: 2;\n            -webkit-box-orient: vertical;\n        }\n    }\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("使用 JS 判断 CSS 属性支持情况")])]),t._v(" "),a("p",[t._v("作为 @supports 的另一种形式出现的，我们可以使用 javascript 的方式来获得 CSS 属性的支持情况。")]),t._v(" "),a("p",[a("code",[t._v("CSS.supports('display', 'flex');")]),t._v("  必须2个参数， 否则返回false，（目前不支持IE浏览器）")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("使用 JS 库 "),a("code",[t._v("modernizr")])])]),t._v(" "),a("p",[t._v("如果浏览器不支持"),a("code",[t._v("@supports")]),t._v("，可以通过调用ele.style来判断属性支持情况（库："),a("a",{attrs:{href:"https://github.com/Modernizr/Modernizr",target:"_blank",rel:"noopener noreferrer"}},[t._v("Modernizr"),a("OutboundLink")],1),t._v("）")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("通过判断 赋值再查询 来判断是否支持")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    var root = document.documentElement; //HTML\n \n    for(var key in root.style) {\n        console.log(key);\n    }\n\n    // 将会打印\n    // alignContent\n    // alignItems\n    // alignSelf\n    // alignmentBaseline\n    // all\n    // animation\n    // ...\n")])])]),a("p",[t._v("元素可能有 background 属性，但是不支持具体的 linear-gradinet() 属性值。这个时候该如何检测呢？只需要将具体的值赋值给某一元素，再查询这个属性值能否被读取。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    var root = document.documentElement;\n \n    root.style.backgroundImage = 'linear-gradient(90deg, #888, #ccc)';\n    \n    if(root.style.backgroundImage) {\n    // 支持\n    } else {\n    // 不支持\n    }\n")])])]),a("h3",{attrs:{id:"简单的-css-属性支持封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单的-css-属性支持封装"}},[t._v("#")]),t._v(" 简单的 CSS 属性支持封装")]),t._v(" "),a("p",[t._v("通过页面隐藏的元素进行测试。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    /**\n    * 用于简单的 CSS 特性检测\n    * @param [String] property 需要检测的 CSS 属性名\n    * @param [String] value 样式的具体属性值\n    * @return [Boolean] 是否通过检查\n    */\n    function cssTest(property, value) {\n        // CSS && CSS.supports\n        // CSS.supports('display', 'flex');  必须2个参数， 否则返回false\n        \n        // 用于测试的元素，隐藏在页面上\n        var ele = document.getElementById('test-display-none');\n    \n        // 只有一个参数的情况\n        if(arguments.length === 1) {\n            if(property in ele.style) {\n                return true;\n            }\n        // 两个参数的情况\n        }else if(arguments.length === 2){\n            ele.style[property] = value;\n    \n            if(ele.style[property]) {\n                return true;\n            }\n        }\n    \n        return false;\n    }\n")])])]),a("h3",{attrs:{id:"position定位-细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position定位-细节"}},[t._v("#")]),t._v(" position定位 细节")]),t._v(" "),a("p",[t._v("position: absolute;")]),t._v(" "),a("ul",[a("li",[t._v("相对于 非static的先辈元素定位")]),t._v(" "),a("li",[t._v("如果先辈元素全是"),a("code",[t._v("static")]),t._v("，那么相对于"),a("strong",[t._v("视口")]),t._v("定位")])]),t._v(" "),a("p",[t._v("position：fixed")]),t._v(" "),a("ul",[a("li",[t._v("相对于视口定位")]),t._v(" "),a("li",[t._v("如果先辈元素有"),a("code",[t._v("非none")]),t._v("的"),a("code",[t._v("transform")]),t._v("属性，那么相对于该先辈元素定位\n"),a("ul",[a("li",[t._v("（不注意容易产生BUG）")])])])]),t._v(" "),a("h3",{attrs:{id:"visibility-hidden、display-none、z-index-1、opacity-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visibility-hidden、display-none、z-index-1、opacity-0"}},[t._v("#")]),t._v(" visibility:hidden、display:none、z-index=-1、opacity：0")]),t._v(" "),a("h3",{attrs:{id:"清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动"}},[t._v("#")]),t._v(" 清除浮动")]),t._v(" "),a("p",[t._v("浮动元素脱离了文档流，不能撑开元素。需要清除浮动。")]),t._v(" "),a("p",[t._v("清除浮动的方法")]),t._v(" "),a("ol",[a("li",[t._v("伪元素 + "),a("code",[t._v("clear: both;")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    // 全浏览器通用的clearfix方案\n    // 引入了zoom以支持IE6/7\n    .clearfix:after {\n        display: table;\n        content: " ";\n        clear: both;\n    }\n    .clearfix{\n        *zoom: 1;\n    }\n\n    // 全浏览器通用的clearfix方案【推荐】\n    // 引入了zoom以支持IE6/7\n    // 同时加入:before以解决现代浏览器上边距折叠的问题\n    .clearfix:before,\n    .clearfix:after {\n        display: table;\n        content: " ";\n    }\n    .clearfix:after {\n        clear: both;\n    }\n    .clearfix{\n        *zoom: 1;\n    }\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("给父元素设置 "),a("code",[t._v("overflow: hidden;")])]),t._v(" "),a("li",[t._v("空白元素 + "),a("code",[t._v("clear: both;")]),t._v(" （和伪元素实现原理一样，不过 low 很多）")])]),t._v(" "),a("h3",{attrs:{id:"rem-em-px-vw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem-em-px-vw"}},[t._v("#")]),t._v(" rem em px vw")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("px")]),t._v("：(pixel 像素的缩写)，相对于显示器屏幕分辨率")]),t._v(" "),a("li",[a("code",[t._v("em")]),t._v("：相对于父元素的 "),a("code",[t._v("font-size")])]),t._v(" "),a("li",[a("code",[t._v("rem")]),t._v("：可想成 "),a("code",[t._v("root-em")]),t._v("，相对于 root（html）的 "),a("code",[t._v("font-size")])]),t._v(" "),a("li",[a("code",[t._v("vw")]),t._v("：相对视口（viewport）的宽度而定的，长度等于视口宽度的 1/100")])]),t._v(" "),a("h3",{attrs:{id:"伪类和伪元素的作用和区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类和伪元素的作用和区别"}},[t._v("#")]),t._v(" 伪类和伪元素的作用和区别")]),t._v(" "),a("p",[t._v("伪类：伪类选择元素基于的是当前元素处于的状态，或者说元素当前所具有的特性，功能和class有些类似，但它是基于文档之外的抽象，所以叫伪类（:first-child   :link   :visitive   :hover   :focus   :lang）")]),t._v(" "),a("p",[t._v("伪元素：伪元素控制的内容实际上和元素是相同的，但是它本身只是基于元素的抽象，"),a("strong",[t._v("不存在于文档中")]),t._v("，所以叫伪元素（:first-line  :first-letter   :befoe   :after)")])])}),[],!1,null,null,null);e.default=s.exports}}]);