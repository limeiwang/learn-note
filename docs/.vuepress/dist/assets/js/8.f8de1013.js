(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{388:function(t,a,s){t.exports=s.p+"assets/img/http-get.2d5d5214.png"},389:function(t,a,s){t.exports=s.p+"assets/img/http-post.fe7a36dd.png"},415:function(t,a,s){"use strict";s.r(a);var n=s(52),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"关于http"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于http"}},[t._v("#")]),t._v(" 关于Http")]),t._v(" "),n("h3",{attrs:{id:"什么是http-超文本传输协议-它是一个应用层协议。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是http-超文本传输协议-它是一个应用层协议。"}},[t._v("#")]),t._v(" 什么是http？"),n("strong",[t._v("超文本传输协议")]),t._v("，它是一个"),n("strong",[t._v("应用层")]),t._v("协议。")]),t._v(" "),n("p",[t._v("HTTP（HyperText Transfer Protocol）协议是基于TCP的应用层协议，它不关心数据传输的细节，主要是用来规定客户端和服务端的数据传输格式，最初是用来向客户端传输HTML页面的内容。默认端口是80。")]),t._v(" "),n("h3",{attrs:{id:"http简史"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http简史"}},[t._v("#")]),t._v(" HTTP简史")]),t._v(" "),n("h4",{attrs:{id:"http-0-9版本-1991年"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9版本-1991年"}},[t._v("#")]),t._v(" HTTP 0.9版本  1991年")]),t._v(" "),n("p",[t._v("这个版本就是最初用来向客户端传输HTML页面的，所以只有一个GET命令，然后服务器返回客户端一个HTML页面，不能是其他格式。\n利用这个版本完全可以构建一个简单的静态网站了。")]),t._v(" "),n("h4",{attrs:{id:"http-1-0版本-1996年"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0版本-1996年"}},[t._v("#")]),t._v(" HTTP 1.0版本  1996年")]),t._v(" "),n("p",[t._v("1.0版本是改变计较大的，尊订了现在HTTP协议的基础，这个版本的协议不仅可以传输HTML的文本页面，还可以传输其他二进制文件，例如：图片、视频。而且还增加了现在常用的POST和HEAD命令。请求消息和响应消息也不是单一的了，规定了一些元数据字段。例如：字符集、编码。状态响应码等。")]),t._v(" "),n("h4",{attrs:{id:"http-1-1版本-1997年"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1版本-1997年"}},[t._v("#")]),t._v(" HTTP 1.1版本 1997年")]),t._v(" "),n("p",[t._v("在1.0版本发布之后半年的时间又发布了一个版本，这个版本在1.0版本的基础上更加完善了。这个版本增加了持久连接，就是之前版本的协议一次请求就是一次TCP链接，请求完成后这个链接就关闭掉了。众所周知TCP协议是可靠的，建立连接需要3次握手，断开链接需要4次挥手，并且TCP有流量控制和阻塞控制，有慢开始机制，刚建立链接时传输比较慢，这是比较耗费资源的。一个丰富的页面会有许多图片、表单和超链接。这样的话就会有多次的HTTP请求，所以在这个版本上默认不关闭TCP连接也不声明Connection：keep-alive字段，如果确实要关闭可以指定Connection：close字段。还引入了管道机制，就是说在一个TCP链接里可以同时发送多个HTTP请求，而不必等待上一个请求响应成功再发送。还增加了PUT、PATCH、HEAD、OPTION、DELETE等命令。丰富了客户端和服务端交互动作。还增加了Host字段。")]),t._v(" "),n("h4",{attrs:{id:"http-2-0版本-2015年"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0版本-2015年"}},[t._v("#")]),t._v(" HTTP 2.0版本  2015年")]),t._v(" "),n("p",[t._v("这个版本也是随着互联网的发展，有了新的需求定制了新的功能还有对上一个版本的完善。1.1版本有了管道机制，但是在服务端还是要对请求进行排队处理。这个版本可以多工的处理。还有了头信心压缩和服务器的主动推送。")]),t._v(" "),n("h3",{attrs:{id:"http特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http特点"}},[t._v("#")]),t._v(" http特点：")]),t._v(" "),n("ul",[n("li",[t._v("无状态的协议，无状态就是客户端的每次请求都没有关系，它们是独立的。")]),t._v(" "),n("li",[t._v("只能是客户端发起请求，服务器响应。服务器不能主动向客户端传递消息。")]),t._v(" "),n("li",[t._v("底层是基于TCP实现的。")])]),t._v(" "),n("h3",{attrs:{id:"http报文分为请求报文和响应报文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http报文分为请求报文和响应报文"}},[t._v("#")]),t._v(" http报文分为请求报文和响应报文")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("请求报文：它会向Web服务器请求一个动作。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("请求报文由请求行（request line）、请求头部（header）、空行和请求数据4个部分组成")])]),t._v(" "),n("li",[n("p",[t._v("请求头")]),t._v(" "),n("p",[t._v("Accept:")]),t._v(" "),n("p",[t._v("Accept-Encoding: gzip, deflate, br")]),t._v(" "),n("p",[t._v("Accept-Language: zh-CN,zh;q=0.9")]),t._v(" "),n("p",[t._v("Cache-Control: max-age=0")]),t._v(" "),n("p",[t._v("Connection: keep-alive")]),t._v(" "),n("p",[t._v("Host: localhost:8080")]),t._v(" "),n("p",[t._v("Referer: http://localhost:8080/browser/http.html")]),t._v(" "),n("p",[t._v("Sec-Fetch-Dest: document")]),t._v(" "),n("p",[t._v("Sec-Fetch-Mode: navigate")]),t._v(" "),n("p",[t._v("Sec-Fetch-Site: same-origin")])])])]),t._v(" "),n("li",[n("p",[t._v("响应报文：它会将请求的结果返回给客户端。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("响应报文由三个部分组成，分别是：状态行、消息报头、响应正文。")])]),t._v(" "),n("li",[n("p",[t._v("响应头")]),t._v(" "),n("p",[t._v("Accept-Ranges: bytes")]),t._v(" "),n("p",[t._v("access-control-allow-origin: *")]),t._v(" "),n("p",[t._v("Content-Length: 287")]),t._v(" "),n("p",[t._v("Content-Type: text/html; charset=UTF-8")]),t._v(" "),n("p",[t._v("Date: Thu, 19 Nov 2020 15:57:34 GMT")]),t._v(" "),n("p",[t._v('ETag: W/"11f-Zn+0AjH/vxli4WLj1EMYz+sNabc"')]),t._v(" "),n("p",[t._v("Vary: Accept-Encoding")]),t._v(" "),n("p",[t._v("X-Powered-By: Express")])])])])]),t._v(" "),n("h3",{attrs:{id:"前端要重点知道的知识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端要重点知道的知识"}},[t._v("#")]),t._v(" 前端要重点知道的知识")]),t._v(" "),n("h4",{attrs:{id:"_1-url-统一资源标识符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-url-统一资源标识符"}},[t._v("#")]),t._v(" 1. URL（统一资源标识符）")]),t._v(" "),n("p",[t._v("一种特殊类型的URI，包含协议、域名、端口，可能包含虚拟目录、文件名、锚、参数。其中协议，域名，端口一部分不一样，就是跨域。")]),t._v(" "),n("h4",{attrs:{id:"_2-request-method-请求方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-request-method-请求方式"}},[t._v("#")]),t._v(" 2. Request Method（请求方式）：")]),t._v(" "),n("p",[t._v("GET，POST，HEAD，PUT，DELETE，CONNECT，OPTIONS，TRACE。常用就是GET,POST，注意它们的区别。")]),t._v(" "),n("h4",{attrs:{id:"_3-状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-状态码"}},[t._v("#")]),t._v(" 3. 状态码：")]),t._v(" "),n("ul",[n("li",[t._v("1xx：指示信息--表示请求已接收，继续处理。")]),t._v(" "),n("li",[t._v("2xx：成功--表示请求已被成功接收、理解、接受。")]),t._v(" "),n("li",[t._v("3xx：重定向--要完成请求必须进行更进一步的操作。")]),t._v(" "),n("li",[t._v("4xx：客户端错误--请求有语法错误或请求无法实现。")]),t._v(" "),n("li",[t._v("5xx：服务器端错误--服务器未能实现合法的请求。")])]),t._v(" "),n("p",[n("strong",[t._v("常见状态码")])]),t._v(" "),n("ul",[n("li",[t._v("200 OK：客户端请求成功。")]),t._v(" "),n("li",[t._v("400 Bad Request：客户端请求有语法错误，不能被服务器所理解。")]),t._v(" "),n("li",[t._v("401 Unauthorized：请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用。")]),t._v(" "),n("li",[t._v("403 Forbidden：服务器收到请求，但是拒绝提供服务。")]),t._v(" "),n("li",[t._v("404 Not Found：请求资源不存在，举个例子：输入了错误的URL。")]),t._v(" "),n("li",[t._v("500 Internal Server Error：服务器发生不可预期的错误。")]),t._v(" "),n("li",[t._v("503 Server Unavailable：服务器当前不能处理客户端的请求，一段时间后可能恢复正常，举个例子：HTTP/1.1 200 OK（CRLF）。")])]),t._v(" "),n("h4",{attrs:{id:"_4-cookie与session区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-cookie与session区别"}},[t._v("#")]),t._v(" 4. cookie与session区别：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("cookie将状态保存在客户端，session将状态保存在服务端。")])]),t._v(" "),n("li",[n("p",[t._v("session相对于cookie要安全，但cookie不需要占用服务器的资源。")])]),t._v(" "),n("li",[n("p",[t._v("单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。")])])]),t._v(" "),n("h3",{attrs:{id:"https"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),n("p",[t._v("HTTPS是http协议的"),n("strong",[t._v("安全版本")]),t._v("，http协议的数据传输是"),n("strong",[t._v("明文")]),t._v("的，是不安全的，HTTPS使用了"),n("strong",[t._v("SSL/TLS")]),t._v("协议进行了"),n("strong",[t._v("加密处理")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("http与https的区别")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("HTTP 无法加密，而HTTPS 对传输的数据进行加密，更加安全。")])]),t._v(" "),n("li",[n("p",[t._v("HTTP 无需证书，而HTTPS 需要CA机构wosign的颁发的SSL证书。")])]),t._v(" "),n("li",[n("p",[t._v("HTTP 标准端口是80 ，而 HTTPS 的标准端口是443。")])]),t._v(" "),n("li",[n("p",[t._v("在OSI 网络模型中，HTTP工作于应用层，而HTTPS 的安全传输机制工作在传输层。")])])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.jianshu.com/p/a1ebc61ce141",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP三次握手及四次挥手"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/sean_cd/article/details/6966130",target:"_blank",rel:"noopener noreferrer"}},[t._v("https工作原理"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"content-type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#content-type"}},[t._v("#")]),t._v(" Content-Type")]),t._v(" "),n("p",[t._v("前端数据传递至后台时，需要对其进行编码，其中，编码格式可分为四种：")]),t._v(" "),n("ol",[n("li",[t._v("application/x-www-form-urlencoded，")]),t._v(" "),n("li",[t._v("multipart/form-data，")]),t._v(" "),n("li",[t._v("application/json，")]),t._v(" "),n("li",[t._v("text/plain。")])]),t._v(" "),n("p",[t._v("前后台完成数据交互的方式只有两种:")]),t._v(" "),n("ol",[n("li",[t._v("form表单提交,\n"),n("ul",[n("li",[t._v("form表单通过enctype属性设置编码类型,默认值是: application/x-www-form-urlencoded;")])])]),t._v(" "),n("li",[t._v("ajax提交。\n"),n("ul",[n("li",[t._v("ajax可通过contentType属性设置编码类型,默认值也是: application/x-www-form-urlencoded;")])])])]),t._v(" "),n("h4",{attrs:{id:"application-x-www-form-urlencoded"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("#")]),t._v(" application/x-www-form-urlencoded")]),t._v(" "),n("blockquote",[n("p",[t._v("后台如何接收?使用request.getParameter('work');来获取参数名和参数值。")])]),t._v(" "),n("p",[t._v('这种编码格式，是我们最常见的一种方式，将数据封装成一个字符串，参数名和参数值使用"＝"拼接，参数之间使用"&"拼接，最终传递\n到后台的数据格式如: key1=value1&key2=value2&...;')]),t._v(" "),n("p",[t._v("另外，key和value都会分别使用encodeURI()对其进行编码，也就是你所要传递的数据，实际上已经进行了一次编码，形如：name=Marydon&work=%E7%A8%8B%E5%BA%8F%E5%91%98，服务器接收到后干的第一件事就是使用URLDdecoder.decode()对name和value进行一次解码。不管是form表单请求还是ajax请求，都是这样进行数据组装的。")]),t._v(" "),n("h4",{attrs:{id:"get请求和post请求的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get请求和post请求的区别"}},[t._v("#")]),t._v(" get请求和post请求的区别")]),t._v(" "),n("ul",[n("li",[t._v("get请求：没有请求体；会直接将form数据拼接到url中，用？隔开，数据对外可见；")]),t._v(" "),n("li",[t._v("post请求：将数据放到请求体中；无法直观看到要传输的数据，安全性相对高一点。")])]),t._v(" "),n("p",[t._v("这是为我们大众所熟知的两个区别，那么问题来了，为何get请求提交的数据携带中文时，后台接收到的中文数据会乱码，而post请求就不会乱码呢？")]),t._v(" "),n("p",[t._v("在来看一下这两请求")]),t._v(" "),n("p",[n("strong",[t._v("get请求")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(388),alt:"get请求",title:"get请求"}})]),t._v(" "),n("p",[n("strong",[t._v("get请求")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(389),alt:"get请求",title:"post请求"}})]),t._v(" "),n("p",[t._v("后台将请求字符集打印出来")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该请求的字符集是")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCharacterEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("　　\n")])])]),n("p",[t._v("通过前后端测试，这次我们可以看出来get请求与post请求的另一个区别：")]),t._v(" "),n("ul",[n("li",[t._v("当form表单数据编码类型设置为application/x-www-form-urlencoded时（也就是默认值），浏览器向后台发送请求时，分为两种情况：")]),t._v(" "),n("li",[t._v("当请求方式为get时，请求头部信息没有Content-Type属性，也没有指定数据的字符集；")]),t._v(" "),n("li",[t._v("当请求方式为post时，请求头部信息有Content-Type属性，并指定数据的字符集，即：application/x-www-form-urlencoded; charset=UTF-8；")])]),t._v(" "),n("p",[t._v("那么get请求时，所采用的字符集到底是什么？通过后台测试得出结果：ISO-8859-1")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get请求默认字符集")]),t._v("\ncontentType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/x-www-form-urlencoded; charset=UTF-8'")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显式声明")]),t._v("\n")])])]),n("p",[t._v("那么既然如此，在ajax请求中，我们是不是可以显式声明contentType属性，解决get请求乱码问题呢？")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[t._v("type "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求方式")]),t._v("\ncontentType "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/x-www-form-urlencoded; charset=UTF-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显式声明")]),t._v("\n")])])]),n("p",[t._v("网页已经生效,　　结果却令人失望：　　还是乱码，还得重新编码。\n　　Content-Type属性，告诉服务器提交的数据的字符集是utf-8，并让服务器以utf-8格式解析数据，由此可见：\n　　问题不在于服务器，而在于浏览器：当浏览器检测到编码格式为application/x-www-form-urlencoded并且为get请求时，浏览器会先用ISO-8859-1对form数据进行编码，然后再用encodeURI()对其进行编码。\n　　所以，get请求导致后台接收到的中文出现乱码的根本原因是：页面字符集是utf-8，浏览器却按iso-8859-1进行重新编码，后台接收后以utf-8进行解码当然会出现乱码。")]),t._v(" "),n("p",[n("strong",[t._v("小结")])]),t._v(" "),n("ul",[n("li",[t._v("当表单数据的编码格式为：application/x-www-form-urlencoded时：")]),t._v(" "),n("li",[t._v("get请求，浏览器会将数据按照iso-8859-1进行重新编码，导致后台接收到中文时必然乱码；")]),t._v(" "),n("li",[t._v("post请求，浏览器会按照utf-8对要提交的数据进行编码，由于后台本身就是使用utf-8对其进行解析，所以才不会出现乱码的情况。")]),t._v(" "),n("li",[t._v("至于get请求解决乱码问题主要有两种方式，具体见另一篇文章。")])]),t._v(" "),n("h4",{attrs:{id:"multipart-form-data"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#multipart-form-data"}},[t._v("#")]),t._v(" multipart/form-data")]),t._v(" "),n("p",[t._v("主要用于传输文件，将文件转换成二进制数据进行传输，不涉及转码问题。")]),t._v(" "),n("blockquote",[n("p",[t._v("后台如何接收?使用request.getInputStream();取值。")])]),t._v(" "),n("p",[t._v("IE浏览器和chrome浏览器下，传输的form数据是不一样的；")]),t._v(" "),n("p",[t._v("共同点是：Content-Type的值为multipart/form-data; boundary=--...，貌似没有其它的固定格式，不再考虑，后台只要能接收到就行。")]),t._v(" "),n("p",[t._v("结合代码进行实现：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token special-attr"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onchange")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),n("span",{pre:!0,attrs:{class:"token value javascript language-javascript"}},[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("upload")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'getParams'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token special-attr"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),n("span",{pre:!0,attrs:{class:"token value css language-css"}},[n("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("上传"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token special-attr"}},[n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),n("span",{pre:!0,attrs:{class:"token value javascript language-javascript"}},[t._v("javascript"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("　　\n")])])]),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("upload")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js 获取文件对象")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fileObj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" fileObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'图片上传失败，请重试~'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建form表单")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" formFile "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加入文件对象")]),t._v("\n    formFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fileObj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建XMLHttpRequest对象")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。")]),t._v("\n    xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求完成")]),t._v("\n    xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将返回数据转换成JSON对象")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求失败")]),t._v("\n    xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onerror "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上传进度调用方法（可实现上传进度条）")]),t._v("\n    xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upload"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onprogress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始上传,发送form数据(以二进制数据传递给后台)")]),t._v("\n    xhr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("formFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("后台接收")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("voiddoGet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" is "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" request"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStream")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" is"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"application-json"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#application-json"}},[t._v("#")]),t._v(" application/json")]),t._v(" "),n("blockquote",[n("p",[t._v("后台如何接收?使用request.getReader()取值，也可以使用request.getInputStream()获取。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);