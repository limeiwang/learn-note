(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{356:function(v,_,l){v.exports=l.p+"assets/img/interweb.40bd3632.png"},357:function(v,_,l){v.exports=l.p+"assets/img/page_load.b3dc0390.png"},384:function(v,_,l){"use strict";l.r(_);var e=l(42),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"页面加载过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面加载过程"}},[v._v("#")]),v._v(" 页面加载过程")]),v._v(" "),e("blockquote",[e("p",[v._v("抛开了对页面的具体分析，任何的性能优化都是站不住脚的，盲目的使用一些优化措施，结果可能会适得其反。因此切实的去分析页面的实际性能表现，不断的改进测试，才是正确的优化途径。")])]),v._v(" "),e("h3",{attrs:{id:"从输入url到页面展示的大致流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到页面展示的大致流程"}},[v._v("#")]),v._v(" 从输入url到页面展示的大致流程")]),v._v(" "),e("ol",[e("li",[v._v("浏览器主进程会校验"),e("code",[v._v("url")]),v._v(" "),e("ol",[e("li",[v._v("输入内容是url：则转换成完整的url")]),v._v(" "),e("li",[v._v("如果非url则使用默认的搜索引擎进行搜索")])])]),v._v(" "),e("li",[v._v("当按下回车键后，在当前页面会尝试调用"),e("code",[v._v("beforeunload")]),v._v(" "),e("ol",[e("li",[v._v("如果有 addEventListener + beforeunload 并且有设置 preventDefault 那么会弹窗提示")]),v._v(" "),e("li",[v._v("若用户确认则启动新页面导航")])])]),v._v(" "),e("li",[v._v("浏览器进入loading状态，主进程构建请求行信息，通过IPC将url发送给"),e("code",[v._v("网络进程")])]),v._v(" "),e("li",[v._v("网络进程首先会去查找本地缓存（也就是强缓存）\n"),e("ol",[e("li",[v._v("有缓存：拦截请求，返回200")])])]),v._v(" "),e("li",[v._v("若无缓存则开始DNS域名解析，拿到ip\n"),e("ol",[e("li",[v._v("有DNS缓存：取缓存")])])]),v._v(" "),e("li",[v._v("尝试建立"),e("code",[v._v("TCP")]),v._v("连接\n"),e("ol",[e("li",[v._v("浏览器有tcp最大并发限制（大部分是6个），如果当前tcp队列超过最大限制则请求会排队等待")]),v._v(" "),e("li",[v._v("ps：TCP 包头很复杂，但是主要关注五个问题，顺序问题，丢包问题，连接维护，流量控制，拥塞控制")])])]),v._v(" "),e("li",[v._v("tcp"),e("code",[v._v("三次握手")]),v._v("，然后tcp包装数据（添加tcp头），将数据发送至传输层")]),v._v(" "),e("li",[v._v("若是"),e("code",[v._v("https")]),v._v("则需要发起"),e("code",[v._v("SSL/TLS")]),v._v("握手\n"),e("ol",[e("li",[e("code",[v._v("SSL/TLS")]),v._v("采用对称加密和非对称加密")])])]),v._v(" "),e("li",[v._v("传输层将数据发送给目标服务器，目标服务器解析")]),v._v(" "),e("li",[v._v("目标服务器检查是否需要重定向\n"),e("ol",[e("li",[v._v("若需要：返回301或302")])])]),v._v(" "),e("li",[v._v("目标服务器尝试读取"),e("code",[v._v("协商缓存")])]),v._v(" "),e("li",[v._v("服务器发送数据")]),v._v(" "),e("li",[v._v("tcp"),e("code",[v._v("四次挥手")]),v._v("（关闭连接）\n"),e("ol",[e("li",[v._v("如果是keep-alive什么的就不需要挥手了")])])]),v._v(" "),e("li",[v._v("网络进程拿到数据包进行解析，根据响应头做对应处理，遇到"),e("code",[v._v("text/html")]),v._v("就通知浏览器进程准备渲染")]),v._v(" "),e("li",[v._v("浏览器进程判断url是否同一站点\n"),e("ol",[e("li",[v._v("同一站点：复用渲染进程")]),v._v(" "),e("li",[v._v("否则：创建新渲染进程")])])]),v._v(" "),e("li",[v._v("浏览器进程通知渲染进程"),e("code",[v._v("接收网络进程数据")])]),v._v(" "),e("li",[v._v("渲染进程接收完数据后通知浏览器主进程"),e("code",[v._v("更新页面状态")])]),v._v(" "),e("li",[v._v("渲染进程对页面进行"),e("code",[v._v("加载、解析")]),v._v(" "),e("ol",[e("li",[v._v("构建DOM树和styleSheet（CSSOM）")]),v._v(" "),e("li",[v._v("合并DOM和CSSOM，生成 "),e("code",[v._v("computedStyle")]),v._v(" 得到 layout tree")])])]),v._v(" "),e("li",[v._v("画布绘制\n"),e("ol",[e("li",[v._v("绘制会有分层、分块、合成")]),v._v(" "),e("li",[v._v("如果需要3d渲染，会通知主进程调用 GPU进程")]),v._v(" "),e("li",[v._v("JS资源要等脚本下载完成并执行后才会继续解析HTML（此时可以使用defer和async）\n"),e("ul",[e("li",[v._v("defer是延迟执行。类似放在body后面")]),v._v(" "),e("li",[v._v("async是异步执行。下载完毕执行")])])])])])]),v._v(" "),e("p",[v._v("其实最根本的原理是：代码经过ast语法解析生成字节码，最后编译成二进制码（机器码）然后存入内存，系统将第一条内存指令存入cpu的寄存器中，cpu进行读取、分析、执行指令。")]),v._v(" "),e("h3",{attrs:{id:"网络传输过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网络传输过程"}},[v._v("#")]),v._v(" 网络传输过程")]),v._v(" "),e("p",[e("img",{attrs:{src:l(356),alt:"因特网"}})]),v._v(" "),e("h3",{attrs:{id:"域名解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#域名解析"}},[v._v("#")]),v._v(" 域名解析")]),v._v(" "),e("p",[v._v("IP 查找顺序（查询到就返回）")]),v._v(" "),e("ol",[e("li",[v._v("首先从"),e("code",[v._v("浏览器缓存")]),v._v("中查找 IP")]),v._v(" "),e("li",[v._v("从"),e("code",[v._v("Host文件")]),v._v("中查找 IP")]),v._v(" "),e("li",[v._v("从"),e("code",[v._v("路由器")]),v._v("缓存中查找 IP")]),v._v(" "),e("li",[v._v("发送"),e("code",[v._v("DNS请求")]),v._v("到 本地DNS服务器（运营商）")]),v._v(" "),e("li",[v._v("从"),e("code",[v._v("本地DNS服务器")]),v._v("缓存中查找 IP")]),v._v(" "),e("li",[v._v("以"),e("code",[v._v("递归")]),v._v("的方式往"),e("code",[v._v("根DNS服务器")]),v._v("发起请求")]),v._v(" "),e("li",[v._v("以"),e("code",[v._v("迭代")]),v._v("的方式获取能查询的"),e("code",[v._v("顶级域名服务器")]),v._v("位置")]),v._v(" "),e("li",[v._v("顶级服务器告诉本地DNS到"),e("code",[v._v("权限服务器")]),v._v("上查询")]),v._v(" "),e("li",[v._v("权限服务器将IP返回给本地DNS")]),v._v(" "),e("li",[v._v("本地DNS将IP保存到自己的缓存中")])]),v._v(" "),e("p",[v._v("概念：")]),v._v(" "),e("ul",[e("li",[v._v("DNS 即 (domain name system，域名系统)，一个域名和IP地址相互映射的分布式数据库。")]),v._v(" "),e("li",[v._v("根域名：全球共13个根服务器 (包含所有顶级域名服务器的域名和IP地址)")]),v._v(" "),e("li",[v._v("顶级域名：域名的最后一部分（如：.com、.cn、.net 等）")]),v._v(" "),e("li",[v._v("二级域名：域名的倒数第二个部分，如：example.baidu.com中，二级域名是Baidu")])]),v._v(" "),e("h3",{attrs:{id:"tcp三次握手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp三次握手"}},[v._v("#")]),v._v(" TCP三次握手")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("客户端请求建立连接")])]),v._v(" "),e("li",[e("p",[v._v("服务端确认应答")])]),v._v(" "),e("li",[e("p",[v._v("客户端确认应答")]),v._v(" "),e("p",[v._v("→ ← →")])])]),v._v(" "),e("blockquote",[e("p",[v._v("目的：应对网络延迟问题，防止网络资源浪费，甚至死锁")])]),v._v(" "),e("p",[v._v("三次握手期间，任何1次未收到对面的回复，则都会重发。因此需要确认TCP包的序号问题，所以在IP 包头里面有个 TTL，也即生存时间。")]),v._v(" "),e("h3",{attrs:{id:"tcp四次挥手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp四次挥手"}},[v._v("#")]),v._v(" TCP四次挥手")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("客户端请求断开连接")])]),v._v(" "),e("li",[e("p",[v._v("服务端应答")])]),v._v(" "),e("li",[e("p",[v._v("服务端请求断开连接")])]),v._v(" "),e("li",[e("p",[v._v("客户端应答")]),v._v(" "),e("p",[v._v("→ ← ← →")])])]),v._v(" "),e("blockquote",[e("p",[v._v("目的：保证双方都断开连接")])]),v._v(" "),e("h3",{attrs:{id:"关于缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于缓存"}},[v._v("#")]),v._v(" 关于缓存")]),v._v(" "),e("p",[v._v("浏览器缓存策略相关：比如Cache-Control、"),e("s",[v._v("Pragma")]),v._v("、ETag、Expires、Last-Modified")]),v._v(" "),e("p",[e("strong",[v._v("强缓存")]),v._v("是利用"),e("code",[v._v("Expires")]),v._v("或者"),e("code",[v._v("Cache-Control")]),v._v("这两个http header实现的，命中缓存会返回"),e("code",[v._v("200")])]),v._v(" "),e("ul",[e("li",[v._v("强缓存是不会产生 DNS 解析的，更不会发送请求（"),e("strong",[v._v("不请求服务器")]),v._v("）")]),v._v(" "),e("li",[e("code",[v._v("expires")]),v._v(" 有 "),e("strong",[v._v("服务器时间")]),v._v(" 和 "),e("strong",[v._v("客户端时间")]),v._v(" 不一致导致失效的问题")]),v._v(" "),e("li",[e("code",[v._v("Cache-Control")]),v._v(" 在"),e("code",[v._v("HTTP 1.1")]),v._v("中为了解决expires的问题而诞生\n"),e("ul",[e("li",[v._v("单位为秒，"),e("strong",[v._v("不依赖客户端时间")])]),v._v(" "),e("li",[e("code",[v._v("Cache-Control")]),v._v(" 优先级高于 "),e("code",[v._v("Expires")])])])])]),v._v(" "),e("p",[e("strong",[v._v("协商缓存")]),v._v("利用"),e("code",[v._v("Last-Modified")]),v._v("或者"),e("code",[v._v("Etag")]),v._v("这两个http header实现，命中缓存会返回"),e("code",[v._v("304")])]),v._v(" "),e("ul",[e("li",[v._v("协商缓存由服务器验证缓存的有效性（"),e("strong",[v._v("请求服务器")]),v._v("）")]),v._v(" "),e("li",[v._v("Last-Modified 比较前一个响应头的"),e("code",[v._v("Last-Modified")]),v._v("和新请求头的"),e("code",[v._v("if-modified-since")]),v._v("（单位秒）\n"),e("ul",[e("li",[v._v("根据时间来缓存")]),v._v(" "),e("li",[v._v("最后修改只能精确到"),e("code",[v._v("秒")]),v._v("级")]),v._v(" "),e("li",[v._v("定期生成文件内容没变化时 Last-Modified 改变")])])]),v._v(" "),e("li",[v._v("Etag在 "),e("code",[v._v("HTTP 1.1")]),v._v(" 中出现：比较前一个响应头的 "),e("code",[v._v("Etag")]),v._v(" 和新请求头的 "),e("code",[v._v("If-None-Match")]),v._v("，\n"),e("ul",[e("li",[v._v("优先级高于Last-Modified")]),v._v(" "),e("li",[v._v("基于资源的内容编码生成一串唯一的标识"),e("code",[v._v("字符串")]),v._v("来缓存")]),v._v(" "),e("li",[e("code",[v._v("ETag")]),v._v(" 优先级高于 "),e("code",[v._v("Last-Modified")])])])])]),v._v(" "),e("p",[v._v("在文件变动的时候需要清除缓存。比如：在webpack打包的时候一般会给JS、CSS、图片的文件名添加"),e("code",[v._v("chunkhash")]),v._v("。")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/65605622234b",target:"_blank",rel:"noopener noreferrer"}},[v._v("参考"),e("OutboundLink")],1)]),v._v(" "),e("h3",{attrs:{id:"关于浏览器进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于浏览器进程"}},[v._v("#")]),v._v(" 关于浏览器进程")]),v._v(" "),e("p",[v._v("浏览器是多进程的")]),v._v(" "),e("p",[v._v("多进程的优势")]),v._v(" "),e("ol",[e("li",[v._v("避免单个标签页影响整个浏览器")]),v._v(" "),e("li",[v._v("避免第三方插件影响整个浏览器")]),v._v(" "),e("li",[v._v("利用 cpu 的多核优势")])]),v._v(" "),e("p",[v._v("浏览器进程：主要进程")]),v._v(" "),e("ol",[e("li",[v._v("主进程（Browser进程/控制进程）\n"),e("ul",[e("li",[v._v("负责界面展示，与用户交互（前进、后退等）")]),v._v(" "),e("li",[v._v("负责各个页面的管理，创建和销毁其他进程")]),v._v(" "),e("li",[v._v("将渲染经常的结果绘制到页面上")]),v._v(" "),e("li",[v._v("网络资源的管理、下载等")])])]),v._v(" "),e("li",[v._v("插件进程\n"),e("ul",[e("li",[v._v("为浏览器插件创建的进程")])])]),v._v(" "),e("li",[v._v("GPU进程\n"),e("ul",[e("li",[v._v("用于 3D 绘制")])])]),v._v(" "),e("li",[v._v("渲染进程\n"),e("ul",[e("li",[v._v("页面渲染，脚本执行，事件处理")]),v._v(" "),e("li",[v._v("每个浏览器标签页都是一个 render进程")])])]),v._v(" "),e("li",[v._v("网络进程")])]),v._v(" "),e("p",[v._v("所以：打开浏览器最少会出现2个进程（主进程和标签页的渲染进程）")]),v._v(" "),e("p",[v._v("PS：浏览器还有 "),e("code",[v._v("SharedWorker")]),v._v("进程，方便各页面间的交互")]),v._v(" "),e("h3",{attrs:{id:"渲染进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[v._v("#")]),v._v(" 渲染进程")]),v._v(" "),e("p",[v._v("渲染进程主要包含以下线程： 主要线程")]),v._v(" "),e("ol",[e("li",[v._v("GUI 渲染线程\n"),e("ul",[e("li",[v._v("负责渲染浏览器页面（解析HTML、CSS 构建DOM和 RenderObject树，布局和绘制等）")]),v._v(" "),e("li",[v._v("当然：重绘(Repaint)和回流(Reflow) 也会触发该线程")]),v._v(" "),e("li",[v._v("重点："),e("strong",[v._v("GUI渲染线程和JS引擎线程是互斥的")]),v._v("，会在JS引擎空闲时执行")])])]),v._v(" "),e("li",[v._v("JS 引擎线程\n"),e("ul",[e("li",[v._v("JS内核（例如: V8引擎）：负责解析、运行 JS脚本程序")]),v._v(" "),e("li",[v._v("如果使用 "),e("code",[v._v("WebWorker")]),v._v(" 那么JS引擎线程会 向浏览器申请开一个子线程\n"),e("ul",[e("li",[e("code",[v._v("WebWorker")]),v._v(" 是渲染进程开的子线程，不受JS引擎线程管理")]),v._v(" "),e("li",[v._v("JS线程 和 Worker线程的通信通过 "),e("code",[v._v("postMessage API")])]),v._v(" "),e("li",[e("code",[v._v("postMessage")]),v._v(" 交互数据需要序列化对象")])])])])]),v._v(" "),e("li",[v._v("事件触发线程\n"),e("ul",[e("li",[v._v("宏任务、微任务、事件（比如点击）、AJAX请求等 被事件符合条件触发时。会将任务添加到事件线程中")]),v._v(" "),e("li",[v._v("事件触发线程会把事件添加到待处理队列的队尾，等待 JS 引擎处理")])])]),v._v(" "),e("li",[v._v("定时器线程\n"),e("ul",[e("li",[v._v("定时器所在的线程（"),e("code",[v._v("setInterval")]),v._v("和"),e("code",[v._v("setTimeout")]),v._v("等）")]),v._v(" "),e("li",[v._v("因为JS引擎线程处于阻塞状态会影响计时的准确性，所以单独作为一个线程")]),v._v(" "),e("li",[v._v("W3C标准：setTimeout最小间隔为 4ms")])])]),v._v(" "),e("li",[v._v("异步http请求线程\n"),e("ul",[e("li",[v._v("处理请求的线程，如果有请求回调函数，会将该回调放入事件队列中，由 JS引擎执行")])])])]),v._v(" "),e("p",[v._v("PS：")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("DOMContentLoaded")]),v._v(" 事件触发时：仅 "),e("code",[v._v("DOM")]),v._v(" 加载完成（不包括css、图片资源、async脚本）")]),v._v(" "),e("li",[e("code",[v._v("onload")]),v._v(" 事件触发时：所有资源都加载完成且渲染完毕")])]),v._v(" "),e("h3",{attrs:{id:"页面渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染"}},[v._v("#")]),v._v(" 页面渲染")]),v._v(" "),e("p",[e("img",{attrs:{src:l(357),alt:"页面加载"}})]),v._v(" "),e("p",[v._v("CSS加载是否阻塞渲染？（"),e("strong",[v._v("是否阻塞根据是否需要重绘/回流决定")]),v._v("）")]),v._v(" "),e("ul",[e("li",[v._v("CSS加载 "),e("strong",[v._v("不会阻塞 DOM树的解析")]),v._v(" "),e("ul",[e("li",[v._v("CSS的加载是由"),e("strong",[v._v("主进程的下载线程")]),v._v("异步下载的，解析过程不影响渲染流程")])])]),v._v(" "),e("li",[v._v("CSS加载 "),e("strong",[v._v("会阻塞 Render树渲染")]),v._v(" "),e("ul",[e("li",[v._v("渲染时需要等CSS加载完毕，以获取CSS信息")]),v._v(" "),e("li",[v._v("css加载阻塞DOM树渲染，可以减少重绘/回流")])])]),v._v(" "),e("li",[v._v("css加载 "),e("strong",[v._v("会阻塞 后续js语句的执行")]),v._v(" "),e("ul",[e("li",[v._v("js可能会去获取或改变元素的样式，等所有的css加载渲染完成后在执行js，可以减少重绘/回流")])])])]),v._v(" "),e("p",[v._v("为何 GUI渲染线程 和 JS引擎线程会产生互斥？")]),v._v(" "),e("p",[v._v("因为JavaScript是可以操作DOM的，如果再修改这些元素属性的同时渲染页面，那么渲染线程获得的元素数据可能会不一致，（如果不一致那么渲染线程怎么知道该做什么事情？），因此为防止渲染出现异常，所以"),e("strong",[v._v("当JS引擎执行时 GUI线程 会被挂起，GUI更新会等JS引擎线程空闲时执行")]),v._v("。")]),v._v(" "),e("h5",{attrs:{id:"css图层"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css图层"}},[v._v("#")]),v._v(" css图层")]),v._v(" "),e("p",[v._v("在页面渲染时：有分层、分块、合成的操作。因此"),e("strong",[v._v("利用css实现的动画性能大于直接使用js实现的动画")])]),v._v(" "),e("p",[v._v("css图层分为：普通图层和复合图层")]),v._v(" "),e("p",[v._v("复合图层就是传说中的硬件加速技术，独立于普通文档流中，改动后可以避免整个页面重绘，提升性能，但是也不能大量使用，会导致资源消耗过度。")]),v._v(" "),e("p",[v._v("如果变成复合图层？")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("translate3d")]),v._v("、"),e("code",[v._v("translateZ")])]),v._v(" "),e("li",[e("code",[v._v("will-change")]),v._v("(提前告诉浏览器需要优化) 和 "),e("code",[v._v("opacity")]),v._v("/过渡动画(如：transform) 在动画期间是复合图层")]),v._v(" "),e("li",[e("code",[v._v("video")]),v._v("、"),e("code",[v._v("iframe")]),v._v("、"),e("code",[v._v("canvas")]),v._v("、"),e("code",[v._v("webgl")])])]),v._v(" "),e("p",[v._v("PS：")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("absolute")]),v._v(" 虽然可以脱离普通文档流，但是无法脱离默认复合层。")]),v._v(" "),e("li",[v._v("复合图层的隐式合成：如果a是一个复合图层，而且b在a上面，那么b也会被隐式转为一个复合图层")])])])}),[],!1,null,null,null);_.default=i.exports}}]);